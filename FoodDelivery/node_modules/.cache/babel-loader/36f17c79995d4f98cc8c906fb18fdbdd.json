{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu-study/web/FoodDelivery/src/components/store/orders-context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrdersContext = /*#__PURE__*/React.createContext({\n  numberOfOrders: 0,\n  onNumberOfOrdersChange: number => {},\n  showCart: false,\n  showOrders: () => {},\n  hideOrders: () => {},\n  orders: []\n});\nexport const OrdersContextProvider = props => {\n  _s();\n\n  const [numberOfOrders, setNumberOfOrders] = useState(0);\n  const [showCart, setShowCart] = useState(false);\n\n  const showOrders = () => {\n    setShowCart(true);\n  };\n\n  const hideOrders = () => {\n    setShowCart(false);\n  };\n\n  const numberOfOrdersChangeHandler = (name, price, number) => {\n    setNumberOfOrders(prev => prev + number);\n    let order = {\n      name: name,\n      price: price,\n      amount: number\n    };\n    orders.push(order);\n  };\n\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: {\n      numberOfOrders: numberOfOrders,\n      onNumberOfOrdersChange: numberOfOrdersChangeHandler,\n      showCart: showCart,\n      showOrders: showOrders,\n      hideOrders: hideOrders\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrdersContextProvider, \"935/1LDMojHlJBKtU2uGjJCZk0A=\");\n\n_c = OrdersContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersContextProvider\");","map":{"version":3,"sources":["/home/ubuntu-study/web/FoodDelivery/src/components/store/orders-context.js"],"names":["React","useState","OrdersContext","createContext","numberOfOrders","onNumberOfOrdersChange","number","showCart","showOrders","hideOrders","orders","OrdersContextProvider","props","setNumberOfOrders","setShowCart","numberOfOrdersChangeHandler","name","price","prev","order","amount","push","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC/CC,EAAAA,cAAc,EAAE,CAD+B;AAE/CC,EAAAA,sBAAsB,EAAGC,MAAD,IAAY,CAAE,CAFS;AAG/CC,EAAAA,QAAQ,EAAE,KAHqC;AAI/CC,EAAAA,UAAU,EAAE,MAAM,CAAE,CAJ2B;AAK/CC,EAAAA,UAAU,EAAE,MAAM,CAAE,CAL2B;AAM/CC,EAAAA,MAAM,EAAE;AANuC,CAApB,CAAtB;AASP,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAC9C,QAAM,CAACR,cAAD,EAAiBS,iBAAjB,IAAsCZ,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACM,QAAD,EAAWO,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBM,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAML,UAAU,GAAG,MAAM;AACvBK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,2BAA2B,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcX,MAAd,KAAyB;AAC3DO,IAAAA,iBAAiB,CAAEK,IAAD,IAAUA,IAAI,GAAGZ,MAAlB,CAAjB;AACA,QAAIa,KAAK,GAAG;AAAEH,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,KAAK,EAAEA,KAArB;AAA4BG,MAAAA,MAAM,EAAEd;AAApC,KAAZ;AACAI,IAAAA,MAAM,CAACW,IAAP,CAAYF,KAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,cAAc,EAAEA,cADX;AAELC,MAAAA,sBAAsB,EAAEU,2BAFnB;AAGLR,MAAAA,QAAQ,EAAEA,QAHL;AAILC,MAAAA,UAAU,EAAEA,UAJP;AAKLC,MAAAA,UAAU,EAAEA;AALP,KADT;AAAA,cASGG,KAAK,CAACU;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/BM;;GAAMX,qB;;KAAAA,qB","sourcesContent":["import React from \"react\";\n\nimport { useState } from \"react\";\n\nexport const OrdersContext = React.createContext({\n  numberOfOrders: 0,\n  onNumberOfOrdersChange: (number) => {},\n  showCart: false,\n  showOrders: () => {},\n  hideOrders: () => {},\n  orders: [],\n});\n\nexport const OrdersContextProvider = (props) => {\n  const [numberOfOrders, setNumberOfOrders] = useState(0);\n  const [showCart, setShowCart] = useState(false);\n\n  const showOrders = () => {\n    setShowCart(true);\n  };\n\n  const hideOrders = () => {\n    setShowCart(false);\n  };\n\n  const numberOfOrdersChangeHandler = (name, price, number) => {\n    setNumberOfOrders((prev) => prev + number);\n    let order = { name: name, price: price, amount: number };\n    orders.push(order);\n  };\n\n  return (\n    <OrdersContext.Provider\n      value={{\n        numberOfOrders: numberOfOrders,\n        onNumberOfOrdersChange: numberOfOrdersChangeHandler,\n        showCart: showCart,\n        showOrders: showOrders,\n        hideOrders: hideOrders,\n      }}\n    >\n      {props.children}\n    </OrdersContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}